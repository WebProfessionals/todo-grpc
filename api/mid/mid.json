{
  "package": "task",

  "major_version": "1",
  "description": "Interface Definitonen für das Modul Task \nZweck diese Moduls ist es sowas wie eine TO-DO Liste zu haben",
  "__proto": {
    "messages_source_repo": "git.adcubum.com/tasks/protobuf/messages",
    "services_source_repo": "git.adcubum.com/tasks/protobuf/services",
    "messages_imports": [
      "google/api/annotations.proto",
      "google/protobuf/timestamp.proto",
      "github.com/gogo/protobuf/gogoproto/gogo.proto"
    ],
    "services_imports": [
      "google/api/annotations.proto",
      "mid/messages.proto"
    ],
    "options": [
      {
        "key": "go_package",
        "value": "task"
      },
      {
        "key": "cc_enable_arenas",
        "value": "true"
      },
      {
        "key": "java_multiple_files",
        "value": "true"
      },
      {
        "key": "java_outer_classname",
        "value": "HttpProto"
      },
      {
        "key": "java_package",
        "value": "com.google.api"
      },
      {
        "key": "objc_class_prefix",
        "value": "GAPI"
      }
    ]
  },
  "services": [
    {
      "name": "TaskService",
      "description": "Beschreibung der Services \n Neue Zeile",
      "methods": [
        {
          "name": "CreateTask",
          "description": "Erstellen eines neuen Tasks",
          "input_type": "CreateTaskRequest",
          "output_type": "TaskEntity",
          "options": [
            {
              "name": "google.api.http",
              "vars": [
                {
                  "key": "post",
                  "value": "/v1/{parent=shelves/*}/books"
                },
                {
                  "key": "body",
                  "value": "books"
                }
              ]
            }
          ]
        },
        {
          "name": "GetTask",
          "description": "Abfragen eines Tasks",
          "input_type": "GetTaskRequest",
          "output_type": "TaskEntity",
          "options": []
        },
        {
          "name": "ListTask",
          "description": "Abfragen der Taskliste",
          "input_type": "ListTaskRequest",
          "output_type": "TaskCollection",
          "options": []
        },
        {
          "name": "DeleteTask",
          "description": "Löschen eines Tasks \nNicht widerrufbar",
          "input_type": "DeleteTaskRequest",
          "output_type": "DeleteTaskResponse",
          "options": []
        },
        {
          "name": "UpdateTask",
          "description": "Aktualiseren eines Tasks",
          "input_type": "UpdateTaskRequest",
          "output_type": "TaskEntity",
          "options": [
            {
              "name": "google.api.http",
              "vars": [
                {
                  "key": "put",
                  "value": "/tasks/{id}"
                },
                {
                  "key": "body",
                  "value": "item"
                }
              ]
            }
          ]
        },
        {
          "name": "CompleteTask",
          "description": "Benutzerdefinierte Methode um einen Task direkt als abgeschlossen zu setzen",
          "input_type": "GetTaskRequest",
          "output_type": "TaskEntity",
          "options": []
        }
      ]
    }
  ],
  "enum_types": [
    {
      "name": "Complete",
      "description": "Unkown mit 0 ist bewusst. So können wir feststellen ob ein Wert auch wirklich gesetzt wurde \n Neue Zeile",
      "value": [
        {
          "name": "UNKNOWN",
          "description": "Zustand unbekannt oder nicht gesetzt",
          "number": 0
        },
        {
          "name": "RUNNING",
          "description": "Task läuft",
          "number": 1
        },
        {
          "name": "COMPLETED",
          "description": "Task abgeschlossen",
          "number": 2
        }
      ]
    }
  ],
  "types": [
    {
      "name": "EreignisFotoCreate",
      "description": "Ereignisse welche von der Galerie erkannt wurden \nDie Funktion ist nur gefaket \nDas ist ein test von mutilines",
      "fields": [
        {
          "name": "id",
          "description": "für IDs werden wir intern ulid verwenden",
          "type": "ulid",
          "mandatory": false,
          "__proto": {
            "type": "string",
            "number": 1,
            "options": [
              {
                "name": "gogoproto.moretags",
                "key": "db",
                "value": "id,pk,omitempty"
              }
            ]
          },
          "__sqllite": {
            "type": "BLOB not null primary key"
          }
        },
        {
          "name": "data",
          "description": "Base64 encodetes Bild des Ereigniss",
          "type": "base64",
          "repeated": false,
          "mandatory": true,
          "__proto": {
            "type": "string",
            "number": 2,
            "options": [
              {
                "name": "gogoproto.moretags",
                "key": "db",
                "value": "data,omitempty"
              }
            ]
          },
          "__sqllite": {
            "type": "TEXT"
          }
        },
        {
          "name": "description",
          "description": "Beschreibung des Tasks",
          "type": "base64",
          "repeated": false,
          "mandatory": true,
          "__proto": {
            "type": "string",
            "number": 33
          },
          "__sqllite": {
            "type": "TEXT"
          }
        }
      ]
    }
  ]
}
