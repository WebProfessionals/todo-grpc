syntax = "proto3";

package task.v1;

option go_package = "task";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "protos/rest.proto";

service TaskService {
    rpc CreateTask (CreateTaskRequest) returns (TaskEntity) {
        option (google.api.http) = {
			post: "/tasks"
			body: "item"
		};
    }

    rpc GetTask (GetTaskRequest) returns (TaskEntity) {
        option (google.api.http) = {
			get: "/tasks/{id}"
		};
    }

    rpc ListTask (ListTaskRequest) returns (TaskCollection) {
        option (google.api.http) = {
			get: "/tasks"
		};
    }

    rpc DeleteTask (DeleteTaskRequest) returns (DeleteTaskResponse) {
        option (google.api.http) = {
			delete: "/tasks/{id}"
		};
    }

    rpc UpdateTask (UpdateTaskRequest) returns (TaskEntity) {
        option (google.api.http) = {
			put: "/tasks/{id}"
			body: "item"
		};
    }

    rpc CompleteTask (GetTaskRequest) returns (TaskEntity) {
        option (google.api.http) = {
			post: "/tasks/{id}:complete"
		};
    }

}
enum Complete {
    UNKNOWN = 0;
    RUNNING = 1;
    COMPLETED = 2;
}


message Task {
    string id = 1 [(gogoproto.moretags) = "db:\"id,pk,omitempty\""];
    string title = 2 [(gogoproto.moretags) = "db:\"title,omitempty\""];
    string description = 3 [(gogoproto.moretags) = "db:\"description,omitempty\""];
    Complete completed = 4 [(gogoproto.moretags) = "db:\"completed\""];
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
}

message CreateTaskRequest {
    Task item = 1;
}

message GetTaskRequest {
    string id = 1;
}

message TaskEntity {
    Task data = 1;
    repeated Link links = 2;
}


message ListTaskRequest {
    //reserved 1 to 5;
    //reserved "fields", "expands", "page", "limit", "offset","sort", "filter","count","sum","context";
    string fields = 1;
    string sort = 2;
    string filter = 3;
    int32 page = 4;
    int32 limit = 5;
    bool count = 6;
    string sum = 7;
    string context = 8;
    bool not_completed = 9;
}

message TaskCollection {
    repeated TaskEntity data = 1;
    repeated Link links = 2;
}

message DeleteTaskRequest {
    string id = 1;
}

message DeleteTaskResponse {
}

message UpdateTaskRequest {
    string id = 1;
    Task item = 2;
}
